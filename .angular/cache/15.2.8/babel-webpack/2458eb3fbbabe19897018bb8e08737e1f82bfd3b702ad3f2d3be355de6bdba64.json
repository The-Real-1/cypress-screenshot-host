{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nconst _c0 = [\"container\"];\nfunction Splitter_ng_template_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Splitter_ng_template_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"mousedown\", function Splitter_ng_template_2_div_2_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onGutterMouseDown($event, i_r3));\n    })(\"touchstart\", function Splitter_ng_template_2_div_2_Template_div_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onGutterTouchStart($event, i_r3));\n    });\n    i0.ɵɵelement(1, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r5.gutterStyle());\n  }\n}\nfunction Splitter_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵtemplate(1, Splitter_ng_template_2_ng_container_1_Template, 1, 0, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, Splitter_ng_template_2_div_2_Template, 2, 1, \"div\", 4);\n  }\n  if (rf & 2) {\n    const panel_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.panelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.panelContainerClass())(\"ngStyle\", ctx_r1.panelStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", panel_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r3 !== ctx_r1.panels.length - 1);\n  }\n}\nclass Splitter {\n  constructor(document, platformId, renderer, cd, el) {\n    this.document = document;\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.el = el;\n    this.stateStorage = 'session';\n    this.stateKey = null;\n    this.layout = 'horizontal';\n    this.gutterSize = 4;\n    this.minSizes = [];\n    this.onResizeEnd = new EventEmitter();\n    this.onResizeStart = new EventEmitter();\n    this.nested = false;\n    this.panels = [];\n    this.dragging = false;\n    this.size = null;\n    this.gutterElement = null;\n    this.startPos = null;\n    this.prevPanelElement = null;\n    this.nextPanelElement = null;\n    this.nextPanelSize = null;\n    this.prevPanelSize = null;\n    this._panelSizes = [];\n    this.prevPanelIndex = null;\n    this.window = this.document.defaultView;\n  }\n  get panelSizes() {\n    return this._panelSizes;\n  }\n  set panelSizes(val) {\n    this._panelSizes = val;\n    if (this.el && this.el.nativeElement && this.panels.length > 0) {\n      let children = [...this.el.nativeElement.children[0].children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n      let _panelSizes = [];\n      this.panels.map((panel, i) => {\n        let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n        let panelSize = panelInitialSize || 100 / this.panels.length;\n        _panelSizes[i] = panelSize;\n        children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      });\n    }\n  }\n  ngOnInit() {\n    this.nested = this.isNested();\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'panel':\n          this.panels.push(item.template);\n          break;\n        default:\n          this.panels.push(item.template);\n          break;\n      }\n    });\n  }\n  ngAfterViewInit() {\n    if (this.panels && this.panels.length) {\n      let initialized = false;\n      if (this.isStateful() && isPlatformBrowser(this.platformId)) {\n        initialized = this.restoreState();\n      }\n      if (!initialized) {\n        let children = [...this.el.nativeElement.children[0].children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n        let _panelSizes = [];\n        this.panels.map((panel, i) => {\n          let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n          let panelSize = panelInitialSize || 100 / this.panels.length;\n          _panelSizes[i] = panelSize;\n          children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n        });\n        this._panelSizes = _panelSizes;\n      }\n    }\n  }\n  resizeStart(event, index) {\n    this.gutterElement = event.currentTarget;\n    this.size = this.horizontal() ? DomHandler.getWidth(this.containerViewChild.nativeElement) : DomHandler.getHeight(this.containerViewChild.nativeElement);\n    this.dragging = true;\n    this.startPos = this.horizontal() ? event.pageX || event.changedTouches[0].pageX : event.pageY || event.changedTouches[0].pageY;\n    this.prevPanelElement = this.gutterElement.previousElementSibling;\n    this.nextPanelElement = this.gutterElement.nextElementSibling;\n    this.prevPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true) : DomHandler.getOuterHeight(this.prevPanelElement, true)) / this.size;\n    this.nextPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true) : DomHandler.getOuterHeight(this.nextPanelElement, true)) / this.size;\n    this.prevPanelIndex = index;\n    DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n    DomHandler.addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n    this.onResizeStart.emit({\n      originalEvent: event,\n      sizes: this._panelSizes\n    });\n  }\n  onResize(event) {\n    let newPos;\n    if (this.horizontal()) newPos = event.pageX * 100 / this.size - this.startPos * 100 / this.size;else newPos = event.pageY * 100 / this.size - this.startPos * 100 / this.size;\n    let newPrevPanelSize = this.prevPanelSize + newPos;\n    let newNextPanelSize = this.nextPanelSize - newPos;\n    if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n      this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n      this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n    }\n  }\n  resizeEnd(event) {\n    if (this.isStateful()) {\n      this.saveState();\n    }\n    this.onResizeEnd.emit({\n      originalEvent: event,\n      sizes: this._panelSizes\n    });\n    DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n    DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n    this.clear();\n  }\n  onGutterMouseDown(event, index) {\n    this.resizeStart(event, index);\n    this.bindMouseListeners();\n  }\n  onGutterTouchStart(event, index) {\n    if (event.cancelable) {\n      this.resizeStart(event, index);\n      this.bindTouchListeners();\n      event.preventDefault();\n    }\n  }\n  onGutterTouchEnd(event) {\n    this.resizeEnd(event);\n    this.unbindTouchListeners();\n    if (event.cancelable) event.preventDefault();\n  }\n  validateResize(newPrevPanelSize, newNextPanelSize) {\n    if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\n      return false;\n    }\n    if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\n      return false;\n    }\n    return true;\n  }\n  bindMouseListeners() {\n    if (!this.mouseMoveListener) {\n      this.mouseMoveListener = this.renderer.listen(this.document, 'mousemove', event => {\n        this.onResize(event);\n      });\n    }\n    if (!this.mouseUpListener) {\n      this.mouseUpListener = this.renderer.listen(this.document, 'mouseup', event => {\n        this.resizeEnd(event);\n        this.unbindMouseListeners();\n      });\n    }\n  }\n  bindTouchListeners() {\n    if (!this.touchMoveListener) {\n      this.touchMoveListener = this.renderer.listen(this.document, 'touchmove', event => {\n        this.onResize(event.changedTouches[0]);\n      });\n    }\n    if (!this.touchEndListener) {\n      this.touchEndListener = this.renderer.listen(this.document, 'touchend', event => {\n        this.resizeEnd(event);\n        this.unbindTouchListeners();\n      });\n    }\n  }\n  unbindMouseListeners() {\n    if (this.mouseMoveListener) {\n      this.mouseMoveListener();\n      this.mouseMoveListener = null;\n    }\n    if (this.mouseUpListener) {\n      this.mouseUpListener();\n      this.mouseUpListener = null;\n    }\n  }\n  unbindTouchListeners() {\n    if (this.touchMoveListener) {\n      this.touchMoveListener();\n      this.touchMoveListener = null;\n    }\n    if (this.touchEndListener) {\n      this.touchEndListener();\n      this.touchEndListener = null;\n    }\n  }\n  clear() {\n    this.dragging = false;\n    this.size = null;\n    this.startPos = null;\n    this.prevPanelElement = null;\n    this.nextPanelElement = null;\n    this.prevPanelSize = null;\n    this.nextPanelSize = null;\n    this.gutterElement = null;\n    this.prevPanelIndex = null;\n  }\n  isNested() {\n    if (this.el.nativeElement) {\n      let parent = this.el.nativeElement.parentElement;\n      while (parent && !DomHandler.hasClass(parent, 'p-splitter')) {\n        parent = parent.parentElement;\n      }\n      return parent !== null;\n    } else {\n      return false;\n    }\n  }\n  isStateful() {\n    return this.stateKey != null;\n  }\n  getStorage() {\n    if (isPlatformBrowser(this.platformId)) {\n      switch (this.stateStorage) {\n        case 'local':\n          return this.window.localStorage;\n        case 'session':\n          return this.window.sessionStorage;\n        default:\n          throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n      }\n    } else {\n      throw new Error('Storage is not a available by default on the server.');\n    }\n  }\n  saveState() {\n    this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\n  }\n  restoreState() {\n    const storage = this.getStorage();\n    const stateString = storage.getItem(this.stateKey);\n    if (stateString) {\n      this._panelSizes = JSON.parse(stateString);\n      let children = [...this.containerViewChild.nativeElement.children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n      children.forEach((child, i) => {\n        child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      });\n      return true;\n    }\n    return false;\n  }\n  containerClass() {\n    return {\n      'p-splitter p-component': true,\n      'p-splitter-horizontal': this.layout === 'horizontal',\n      'p-splitter-vertical': this.layout === 'vertical'\n    };\n  }\n  panelContainerClass() {\n    return {\n      'p-splitter-panel': true,\n      'p-splitter-panel-nested': true\n    };\n  }\n  gutterStyle() {\n    if (this.horizontal()) return {\n      width: this.gutterSize + 'px'\n    };else return {\n      height: this.gutterSize + 'px'\n    };\n  }\n  horizontal() {\n    return this.layout === 'horizontal';\n  }\n}\nSplitter.ɵfac = function Splitter_Factory(t) {\n  return new (t || Splitter)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nSplitter.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Splitter,\n  selectors: [[\"p-splitter\"]],\n  contentQueries: function Splitter_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Splitter_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  hostVars: 2,\n  hostBindings: function Splitter_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-splitter-panel-nested\", ctx.nested);\n    }\n  },\n  inputs: {\n    styleClass: \"styleClass\",\n    panelStyleClass: \"panelStyleClass\",\n    style: \"style\",\n    panelStyle: \"panelStyle\",\n    stateStorage: \"stateStorage\",\n    stateKey: \"stateKey\",\n    layout: \"layout\",\n    gutterSize: \"gutterSize\",\n    minSizes: \"minSizes\",\n    panelSizes: \"panelSizes\"\n  },\n  outputs: {\n    onResizeEnd: \"onResizeEnd\",\n    onResizeStart: \"onResizeStart\"\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-splitter-gutter\", 3, \"ngStyle\", \"mousedown\", \"touchstart\", 4, \"ngIf\"], [1, \"p-splitter-gutter\", 3, \"ngStyle\", \"mousedown\", \"touchstart\"], [1, \"p-splitter-gutter-handle\"]],\n  template: function Splitter_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, Splitter_ng_template_2_Template, 3, 6, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", ctx.containerClass())(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.panels);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle],\n  styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Splitter, [{\n    type: Component,\n    args: [{\n      selector: 'p-splitter',\n      template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div class=\"p-splitter-gutter\" *ngIf=\"i !== panels.length - 1\" [ngStyle]=\"gutterStyle()\" (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\">\n                    <div class=\"p-splitter-gutter-handle\"></div>\n                </div>\n            </ng-template>\n        </div>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'p-element',\n        '[class.p-splitter-panel-nested]': 'nested'\n      },\n      styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    stateStorage: [{\n      type: Input\n    }],\n    stateKey: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    gutterSize: [{\n      type: Input\n    }],\n    minSizes: [{\n      type: Input\n    }],\n    onResizeEnd: [{\n      type: Output\n    }],\n    onResizeStart: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container', {\n        static: false\n      }]\n    }],\n    panelSizes: [{\n      type: Input\n    }]\n  });\n})();\nclass SplitterModule {}\nSplitterModule.ɵfac = function SplitterModule_Factory(t) {\n  return new (t || SplitterModule)();\n};\nSplitterModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SplitterModule\n});\nSplitterModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, SharedModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Splitter, SharedModule],\n      declarations: [Splitter]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Splitter, SplitterModule };\n//# sourceMappingURL=primeng-splitter.mjs.map","map":{"version":3,"names":["i0","EventEmitter","PLATFORM_ID","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","Input","Output","ContentChildren","ViewChild","NgModule","i1","isPlatformBrowser","DOCUMENT","CommonModule","DomHandler","PrimeTemplate","SharedModule","_c0","Splitter_ng_template_2_ng_container_1_Template","rf","ctx","ɵɵelementContainer","Splitter_ng_template_2_div_2_Template","_r8","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","Splitter_ng_template_2_div_2_Template_div_mousedown_0_listener","$event","ɵɵrestoreView","i_r3","ɵɵnextContext","index","ctx_r6","ɵɵresetView","onGutterMouseDown","Splitter_ng_template_2_div_2_Template_div_touchstart_0_listener","ctx_r9","onGutterTouchStart","ɵɵelement","ɵɵelementEnd","ctx_r5","ɵɵproperty","gutterStyle","Splitter_ng_template_2_Template","ɵɵtemplate","panel_r2","$implicit","ctx_r1","ɵɵclassMap","panelStyleClass","panelContainerClass","panelStyle","ɵɵadvance","panels","length","Splitter","constructor","document","platformId","renderer","cd","el","stateStorage","stateKey","layout","gutterSize","minSizes","onResizeEnd","onResizeStart","nested","dragging","size","gutterElement","startPos","prevPanelElement","nextPanelElement","nextPanelSize","prevPanelSize","_panelSizes","prevPanelIndex","window","defaultView","panelSizes","val","nativeElement","children","filter","child","hasClass","map","panel","i","panelInitialSize","panelSize","style","flexBasis","ngOnInit","isNested","ngAfterContentInit","templates","forEach","item","getType","push","template","ngAfterViewInit","initialized","isStateful","restoreState","resizeStart","event","currentTarget","horizontal","getWidth","containerViewChild","getHeight","pageX","changedTouches","pageY","previousElementSibling","nextElementSibling","getOuterWidth","getOuterHeight","addClass","emit","originalEvent","sizes","onResize","newPos","newPrevPanelSize","newNextPanelSize","validateResize","resizeEnd","saveState","removeClass","clear","bindMouseListeners","cancelable","bindTouchListeners","preventDefault","onGutterTouchEnd","unbindTouchListeners","mouseMoveListener","listen","mouseUpListener","unbindMouseListeners","touchMoveListener","touchEndListener","parent","parentElement","getStorage","localStorage","sessionStorage","Error","setItem","JSON","stringify","storage","stateString","getItem","parse","containerClass","width","height","ɵfac","Splitter_Factory","t","ɵɵdirectiveInject","Renderer2","ChangeDetectorRef","ElementRef","ɵcmp","ɵɵdefineComponent","type","selectors","contentQueries","Splitter_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","Splitter_Query","ɵɵviewQuery","first","hostAttrs","hostVars","hostBindings","Splitter_HostBindings","ɵɵclassProp","inputs","styleClass","outputs","decls","vars","consts","Splitter_Template","dependencies","NgClass","NgForOf","NgIf","NgTemplateOutlet","NgStyle","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","None","OnPush","host","class","Document","decorators","undefined","static","SplitterModule","SplitterModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sources":["/sandbox/node_modules/primeng/fesm2020/primeng-splitter.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\n\nclass Splitter {\n    constructor(document, platformId, renderer, cd, el) {\n        this.document = document;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.el = el;\n        this.stateStorage = 'session';\n        this.stateKey = null;\n        this.layout = 'horizontal';\n        this.gutterSize = 4;\n        this.minSizes = [];\n        this.onResizeEnd = new EventEmitter();\n        this.onResizeStart = new EventEmitter();\n        this.nested = false;\n        this.panels = [];\n        this.dragging = false;\n        this.size = null;\n        this.gutterElement = null;\n        this.startPos = null;\n        this.prevPanelElement = null;\n        this.nextPanelElement = null;\n        this.nextPanelSize = null;\n        this.prevPanelSize = null;\n        this._panelSizes = [];\n        this.prevPanelIndex = null;\n        this.window = this.document.defaultView;\n    }\n    get panelSizes() {\n        return this._panelSizes;\n    }\n    set panelSizes(val) {\n        this._panelSizes = val;\n        if (this.el && this.el.nativeElement && this.panels.length > 0) {\n            let children = [...this.el.nativeElement.children[0].children].filter((child) => DomHandler.hasClass(child, 'p-splitter-panel'));\n            let _panelSizes = [];\n            this.panels.map((panel, i) => {\n                let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n                let panelSize = panelInitialSize || 100 / this.panels.length;\n                _panelSizes[i] = panelSize;\n                children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            });\n        }\n    }\n    ngOnInit() {\n        this.nested = this.isNested();\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'panel':\n                    this.panels.push(item.template);\n                    break;\n                default:\n                    this.panels.push(item.template);\n                    break;\n            }\n        });\n    }\n    ngAfterViewInit() {\n        if (this.panels && this.panels.length) {\n            let initialized = false;\n            if (this.isStateful() && isPlatformBrowser(this.platformId)) {\n                initialized = this.restoreState();\n            }\n            if (!initialized) {\n                let children = [...this.el.nativeElement.children[0].children].filter((child) => DomHandler.hasClass(child, 'p-splitter-panel'));\n                let _panelSizes = [];\n                this.panels.map((panel, i) => {\n                    let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n                    let panelSize = panelInitialSize || 100 / this.panels.length;\n                    _panelSizes[i] = panelSize;\n                    children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n                });\n                this._panelSizes = _panelSizes;\n            }\n        }\n    }\n    resizeStart(event, index) {\n        this.gutterElement = event.currentTarget;\n        this.size = this.horizontal() ? DomHandler.getWidth(this.containerViewChild.nativeElement) : DomHandler.getHeight(this.containerViewChild.nativeElement);\n        this.dragging = true;\n        this.startPos = this.horizontal() ? event.pageX || event.changedTouches[0].pageX : event.pageY || event.changedTouches[0].pageY;\n        this.prevPanelElement = this.gutterElement.previousElementSibling;\n        this.nextPanelElement = this.gutterElement.nextElementSibling;\n        this.prevPanelSize = (100 * (this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true) : DomHandler.getOuterHeight(this.prevPanelElement, true))) / this.size;\n        this.nextPanelSize = (100 * (this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true) : DomHandler.getOuterHeight(this.nextPanelElement, true))) / this.size;\n        this.prevPanelIndex = index;\n        DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n        this.onResizeStart.emit({ originalEvent: event, sizes: this._panelSizes });\n    }\n    onResize(event) {\n        let newPos;\n        if (this.horizontal())\n            newPos = (event.pageX * 100) / this.size - (this.startPos * 100) / this.size;\n        else\n            newPos = (event.pageY * 100) / this.size - (this.startPos * 100) / this.size;\n        let newPrevPanelSize = this.prevPanelSize + newPos;\n        let newNextPanelSize = this.nextPanelSize - newPos;\n        if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n            this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n            this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n        }\n    }\n    resizeEnd(event) {\n        if (this.isStateful()) {\n            this.saveState();\n        }\n        this.onResizeEnd.emit({ originalEvent: event, sizes: this._panelSizes });\n        DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n        this.clear();\n    }\n    onGutterMouseDown(event, index) {\n        this.resizeStart(event, index);\n        this.bindMouseListeners();\n    }\n    onGutterTouchStart(event, index) {\n        if (event.cancelable) {\n            this.resizeStart(event, index);\n            this.bindTouchListeners();\n            event.preventDefault();\n        }\n    }\n    onGutterTouchEnd(event) {\n        this.resizeEnd(event);\n        this.unbindTouchListeners();\n        if (event.cancelable)\n            event.preventDefault();\n    }\n    validateResize(newPrevPanelSize, newNextPanelSize) {\n        if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\n            return false;\n        }\n        if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\n            return false;\n        }\n        return true;\n    }\n    bindMouseListeners() {\n        if (!this.mouseMoveListener) {\n            this.mouseMoveListener = this.renderer.listen(this.document, 'mousemove', (event) => {\n                this.onResize(event);\n            });\n        }\n        if (!this.mouseUpListener) {\n            this.mouseUpListener = this.renderer.listen(this.document, 'mouseup', (event) => {\n                this.resizeEnd(event);\n                this.unbindMouseListeners();\n            });\n        }\n    }\n    bindTouchListeners() {\n        if (!this.touchMoveListener) {\n            this.touchMoveListener = this.renderer.listen(this.document, 'touchmove', (event) => {\n                this.onResize(event.changedTouches[0]);\n            });\n        }\n        if (!this.touchEndListener) {\n            this.touchEndListener = this.renderer.listen(this.document, 'touchend', (event) => {\n                this.resizeEnd(event);\n                this.unbindTouchListeners();\n            });\n        }\n    }\n    unbindMouseListeners() {\n        if (this.mouseMoveListener) {\n            this.mouseMoveListener();\n            this.mouseMoveListener = null;\n        }\n        if (this.mouseUpListener) {\n            this.mouseUpListener();\n            this.mouseUpListener = null;\n        }\n    }\n    unbindTouchListeners() {\n        if (this.touchMoveListener) {\n            this.touchMoveListener();\n            this.touchMoveListener = null;\n        }\n        if (this.touchEndListener) {\n            this.touchEndListener();\n            this.touchEndListener = null;\n        }\n    }\n    clear() {\n        this.dragging = false;\n        this.size = null;\n        this.startPos = null;\n        this.prevPanelElement = null;\n        this.nextPanelElement = null;\n        this.prevPanelSize = null;\n        this.nextPanelSize = null;\n        this.gutterElement = null;\n        this.prevPanelIndex = null;\n    }\n    isNested() {\n        if (this.el.nativeElement) {\n            let parent = this.el.nativeElement.parentElement;\n            while (parent && !DomHandler.hasClass(parent, 'p-splitter')) {\n                parent = parent.parentElement;\n            }\n            return parent !== null;\n        }\n        else {\n            return false;\n        }\n    }\n    isStateful() {\n        return this.stateKey != null;\n    }\n    getStorage() {\n        if (isPlatformBrowser(this.platformId)) {\n            switch (this.stateStorage) {\n                case 'local':\n                    return this.window.localStorage;\n                case 'session':\n                    return this.window.sessionStorage;\n                default:\n                    throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n            }\n        }\n        else {\n            throw new Error('Storage is not a available by default on the server.');\n        }\n    }\n    saveState() {\n        this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\n    }\n    restoreState() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n        if (stateString) {\n            this._panelSizes = JSON.parse(stateString);\n            let children = [...this.containerViewChild.nativeElement.children].filter((child) => DomHandler.hasClass(child, 'p-splitter-panel'));\n            children.forEach((child, i) => {\n                child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            });\n            return true;\n        }\n        return false;\n    }\n    containerClass() {\n        return {\n            'p-splitter p-component': true,\n            'p-splitter-horizontal': this.layout === 'horizontal',\n            'p-splitter-vertical': this.layout === 'vertical'\n        };\n    }\n    panelContainerClass() {\n        return {\n            'p-splitter-panel': true,\n            'p-splitter-panel-nested': true\n        };\n    }\n    gutterStyle() {\n        if (this.horizontal())\n            return { width: this.gutterSize + 'px' };\n        else\n            return { height: this.gutterSize + 'px' };\n    }\n    horizontal() {\n        return this.layout === 'horizontal';\n    }\n}\nSplitter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: Splitter, deps: [{ token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nSplitter.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.4\", type: Splitter, selector: \"p-splitter\", inputs: { styleClass: \"styleClass\", panelStyleClass: \"panelStyleClass\", style: \"style\", panelStyle: \"panelStyle\", stateStorage: \"stateStorage\", stateKey: \"stateKey\", layout: \"layout\", gutterSize: \"gutterSize\", minSizes: \"minSizes\", panelSizes: \"panelSizes\" }, outputs: { onResizeEnd: \"onResizeEnd\", onResizeStart: \"onResizeStart\" }, host: { properties: { \"class.p-splitter-panel-nested\": \"nested\" }, classAttribute: \"p-element\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }], ngImport: i0, template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div class=\"p-splitter-gutter\" *ngIf=\"i !== panels.length - 1\" [ngStyle]=\"gutterStyle()\" (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\">\n                    <div class=\"p-splitter-gutter-handle\"></div>\n                </div>\n            </ng-template>\n        </div>\n    `, isInline: true, styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: Splitter, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-splitter', template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div class=\"p-splitter-gutter\" *ngIf=\"i !== panels.length - 1\" [ngStyle]=\"gutterStyle()\" (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\">\n                    <div class=\"p-splitter-gutter-handle\"></div>\n                </div>\n            </ng-template>\n        </div>\n    `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        class: 'p-element',\n                        '[class.p-splitter-panel-nested]': 'nested'\n                    }, styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { styleClass: [{\n                type: Input\n            }], panelStyleClass: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], panelStyle: [{\n                type: Input\n            }], stateStorage: [{\n                type: Input\n            }], stateKey: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], gutterSize: [{\n                type: Input\n            }], minSizes: [{\n                type: Input\n            }], onResizeEnd: [{\n                type: Output\n            }], onResizeStart: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container', { static: false }]\n            }], panelSizes: [{\n                type: Input\n            }] } });\nclass SplitterModule {\n}\nSplitterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: SplitterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSplitterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: SplitterModule, declarations: [Splitter], imports: [CommonModule], exports: [Splitter, SharedModule] });\nSplitterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: SplitterModule, imports: [CommonModule, SharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: SplitterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Splitter, SharedModule],\n                    declarations: [Splitter]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Splitter, SplitterModule };\n//# sourceMappingURL=primeng-splitter.mjs.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}